---
apiVersion: v1
kind: Namespace
metadata:
  name: staging
---
kind: ConfigMap
metadata:
  labels:
    app: nginx-cm
    stack: staging
  name: nginx-cm-staging-${parameters['ver']}
  namespace: staging
apiVersion: v1
data:
  config.json: |-
    {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
    stack: staging
  name: nginx-deployment-staging
  namespace: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
        stack: staging
    spec:
      containers:
        - image: nginx:${parameters['ver']}
          name: nginx
          ports:
            - containerPort: 80
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          volumeMounts:
            - mountPath: /opt/config
              name: my-config-map
      volumes:
        - configMap:
            name: nginx-cm-staging-${parameters['ver']}
          name: my-config-map
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
    stack: staging
  name: nginx-staging
  namespace: staging
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx
    stack: staging
  sessionAffinity: None
  type: NodePort
